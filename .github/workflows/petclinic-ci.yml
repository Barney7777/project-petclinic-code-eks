name: Petclinic CI

on:
  push:
    branches:
    - main
    - dev
    - devops-barney
  pull_request:
    branches:
    - main
    - dev

jobs:
  build-test-vulnerabilities-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        java-version: [17]
        distribution: [temurin]
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: ${{ matrix.distribution }}
        cache: maven

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean package -DskipTests -Dspring.profiles.active=mysql

    - name: Run JUnit Tests
      run: mvn test -Dcheckstyle.skip

    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: latest
    - name: Push artifacts to jfrog
      run: |
        jfrog rt upload --url  http://3.27.70.165:8082/artifactory --access-token ${{ secrets.JFROG_TOKEN }} target/*.jar petclinic

